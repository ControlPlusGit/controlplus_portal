!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALPHA_LC_TO_INTEGER	logger.c	54;"	d	file:
ALPHA_UC_TO_INTEGER	logger.c	55;"	d	file:
BD	usb_device.c	221;"	d	file:
BD	usb_device.c	293;"	d	file:
BD	usb_device.c	366;"	d	file:
BD	usb_device.c	438;"	d	file:
BDT	usb_device.c	/^volatile BDT_ENTRY BDT[((USB_MAX_EP_NUMBER + 1) * 2)+1] __attribute__ ((aligned (512)));$/;"	v
BDT	usb_device.c	/^volatile BDT_ENTRY BDT[((USB_MAX_EP_NUMBER + 1) * 4)-2] __attribute__ ((aligned (512)));$/;"	v
BDT	usb_device.c	/^volatile BDT_ENTRY BDT[(USB_MAX_EP_NUMBER + 1) * 2] __attribute__ ((aligned (512)));$/;"	v
BDT	usb_device.c	/^volatile BDT_ENTRY BDT[(USB_MAX_EP_NUMBER + 1) * 4] __attribute__ ((aligned (512)));$/;"	v
BothEP0OutUOWNsSet	usb_device.c	/^USB_VOLATILE BOOL BothEP0OutUOWNsSet;$/;"	v
C12832A1Z_CMD_ADC_NORMAL	lcd_NHD_A1Z.c	61;"	d	file:
C12832A1Z_CMD_ADC_REVERSE	lcd_NHD_A1Z.c	62;"	d	file:
C12832A1Z_CMD_BOOSTER_RATIO_2X_3X_4X	lcd_NHD_A1Z.c	87;"	d	file:
C12832A1Z_CMD_BOOSTER_RATIO_5X	lcd_NHD_A1Z.c	88;"	d	file:
C12832A1Z_CMD_BOOSTER_RATIO_6X	lcd_NHD_A1Z.c	89;"	d	file:
C12832A1Z_CMD_BOOSTER_RATIO_SET	lcd_NHD_A1Z.c	86;"	d	file:
C12832A1Z_CMD_COLUMN_ADDRESS_SET_LSB	lcd_NHD_A1Z.c	60;"	d	file:
C12832A1Z_CMD_COLUMN_ADDRESS_SET_MSB	lcd_NHD_A1Z.c	59;"	d	file:
C12832A1Z_CMD_DISPLAY_ALL_POINTS_OFF	lcd_NHD_A1Z.c	65;"	d	file:
C12832A1Z_CMD_DISPLAY_ALL_POINTS_ON	lcd_NHD_A1Z.c	66;"	d	file:
C12832A1Z_CMD_DISPLAY_NORMAL	lcd_NHD_A1Z.c	63;"	d	file:
C12832A1Z_CMD_DISPLAY_OFF	lcd_NHD_A1Z.c	56;"	d	file:
C12832A1Z_CMD_DISPLAY_ON	lcd_NHD_A1Z.c	55;"	d	file:
C12832A1Z_CMD_DISPLAY_REVERSE	lcd_NHD_A1Z.c	64;"	d	file:
C12832A1Z_CMD_ELECTRONIC_VOLUME	lcd_NHD_A1Z.c	85;"	d	file:
C12832A1Z_CMD_ELECTRONIC_VOLUME_MODE_SET	lcd_NHD_A1Z.c	84;"	d	file:
C12832A1Z_CMD_END	lcd_NHD_A1Z.c	91;"	d	file:
C12832A1Z_CMD_LCD_BIAS_1_DIV_5_DUTY33	lcd_NHD_A1Z.c	67;"	d	file:
C12832A1Z_CMD_LCD_BIAS_1_DIV_6_DUTY33	lcd_NHD_A1Z.c	68;"	d	file:
C12832A1Z_CMD_NOP	lcd_NHD_A1Z.c	83;"	d	file:
C12832A1Z_CMD_NORMAL_MODE	lcd_NHD_A1Z.c	81;"	d	file:
C12832A1Z_CMD_NORMAL_SCAN_DIRECTION	lcd_NHD_A1Z.c	69;"	d	file:
C12832A1Z_CMD_PAGE_ADDRESS_SET	lcd_NHD_A1Z.c	58;"	d	file:
C12832A1Z_CMD_POWER_CTRL_ALL_ON	lcd_NHD_A1Z.c	79;"	d	file:
C12832A1Z_CMD_READ_MODIFY_WRITE	lcd_NHD_A1Z.c	92;"	d	file:
C12832A1Z_CMD_RESET	lcd_NHD_A1Z.c	82;"	d	file:
C12832A1Z_CMD_REVERSE_SCAN_DIRECTION	lcd_NHD_A1Z.c	70;"	d	file:
C12832A1Z_CMD_SLEEP_MODE	lcd_NHD_A1Z.c	80;"	d	file:
C12832A1Z_CMD_START_LINE_SET	lcd_NHD_A1Z.c	57;"	d	file:
C12832A1Z_CMD_STATUS_READ	lcd_NHD_A1Z.c	90;"	d	file:
C12832A1Z_CMD_VOLTAGE_RESISTOR_RATIO_0	lcd_NHD_A1Z.c	71;"	d	file:
C12832A1Z_CMD_VOLTAGE_RESISTOR_RATIO_1	lcd_NHD_A1Z.c	72;"	d	file:
C12832A1Z_CMD_VOLTAGE_RESISTOR_RATIO_2	lcd_NHD_A1Z.c	73;"	d	file:
C12832A1Z_CMD_VOLTAGE_RESISTOR_RATIO_3	lcd_NHD_A1Z.c	74;"	d	file:
C12832A1Z_CMD_VOLTAGE_RESISTOR_RATIO_4	lcd_NHD_A1Z.c	75;"	d	file:
C12832A1Z_CMD_VOLTAGE_RESISTOR_RATIO_5	lcd_NHD_A1Z.c	76;"	d	file:
C12832A1Z_CMD_VOLTAGE_RESISTOR_RATIO_6	lcd_NHD_A1Z.c	77;"	d	file:
C12832A1Z_CMD_VOLTAGE_RESISTOR_RATIO_7	lcd_NHD_A1Z.c	78;"	d	file:
C12832A1Z_DISPLAY_CONTRAST_MAX	lcd_NHD_A1Z.c	93;"	d	file:
C12832A1Z_DISPLAY_CONTRAST_MIN	lcd_NHD_A1Z.c	94;"	d	file:
CON_putchar	logger.c	57;"	d	file:
CTRL_TRF_RX	usb_device.c	148;"	d	file:
CTRL_TRF_TX	usb_device.c	147;"	d	file:
CtrlTrfData	usb_device.c	/^volatile BYTE CtrlTrfData[USB_EP0_BUFF_SIZE];$/;"	v
DEBUG_NUM	usb_device.c	127;"	d	file:
DEBUG_NUM	usb_device.c	130;"	d	file:
DEBUG_WITH_TIME	usb_device.c	128;"	d	file:
DEBUG_WITH_TIME	usb_device.c	131;"	d	file:
EP	usb_device.c	219;"	d	file:
EP	usb_device.c	292;"	d	file:
EP	usb_device.c	364;"	d	file:
EP	usb_device.c	437;"	d	file:
EP0_IN_EVEN	usb_device.c	156;"	d	file:
EP0_IN_EVEN	usb_device.c	229;"	d	file:
EP0_IN_EVEN	usb_device.c	301;"	d	file:
EP0_IN_EVEN	usb_device.c	374;"	d	file:
EP0_IN_ODD	usb_device.c	157;"	d	file:
EP0_IN_ODD	usb_device.c	230;"	d	file:
EP0_IN_ODD	usb_device.c	302;"	d	file:
EP0_IN_ODD	usb_device.c	375;"	d	file:
EP0_OUT_EVEN	usb_device.c	154;"	d	file:
EP0_OUT_EVEN	usb_device.c	227;"	d	file:
EP0_OUT_EVEN	usb_device.c	299;"	d	file:
EP0_OUT_EVEN	usb_device.c	372;"	d	file:
EP0_OUT_ODD	usb_device.c	155;"	d	file:
EP0_OUT_ODD	usb_device.c	228;"	d	file:
EP0_OUT_ODD	usb_device.c	300;"	d	file:
EP0_OUT_ODD	usb_device.c	373;"	d	file:
EP10_IN_EVEN	usb_device.c	196;"	d	file:
EP10_IN_EVEN	usb_device.c	269;"	d	file:
EP10_IN_EVEN	usb_device.c	341;"	d	file:
EP10_IN_EVEN	usb_device.c	414;"	d	file:
EP10_IN_ODD	usb_device.c	197;"	d	file:
EP10_IN_ODD	usb_device.c	270;"	d	file:
EP10_IN_ODD	usb_device.c	342;"	d	file:
EP10_IN_ODD	usb_device.c	415;"	d	file:
EP10_OUT_EVEN	usb_device.c	194;"	d	file:
EP10_OUT_EVEN	usb_device.c	267;"	d	file:
EP10_OUT_EVEN	usb_device.c	339;"	d	file:
EP10_OUT_EVEN	usb_device.c	412;"	d	file:
EP10_OUT_ODD	usb_device.c	195;"	d	file:
EP10_OUT_ODD	usb_device.c	268;"	d	file:
EP10_OUT_ODD	usb_device.c	340;"	d	file:
EP10_OUT_ODD	usb_device.c	413;"	d	file:
EP11_IN_EVEN	usb_device.c	200;"	d	file:
EP11_IN_EVEN	usb_device.c	273;"	d	file:
EP11_IN_EVEN	usb_device.c	345;"	d	file:
EP11_IN_EVEN	usb_device.c	418;"	d	file:
EP11_IN_ODD	usb_device.c	201;"	d	file:
EP11_IN_ODD	usb_device.c	274;"	d	file:
EP11_IN_ODD	usb_device.c	346;"	d	file:
EP11_IN_ODD	usb_device.c	419;"	d	file:
EP11_OUT_EVEN	usb_device.c	198;"	d	file:
EP11_OUT_EVEN	usb_device.c	271;"	d	file:
EP11_OUT_EVEN	usb_device.c	343;"	d	file:
EP11_OUT_EVEN	usb_device.c	416;"	d	file:
EP11_OUT_ODD	usb_device.c	199;"	d	file:
EP11_OUT_ODD	usb_device.c	272;"	d	file:
EP11_OUT_ODD	usb_device.c	344;"	d	file:
EP11_OUT_ODD	usb_device.c	417;"	d	file:
EP12_IN_EVEN	usb_device.c	204;"	d	file:
EP12_IN_EVEN	usb_device.c	277;"	d	file:
EP12_IN_EVEN	usb_device.c	349;"	d	file:
EP12_IN_EVEN	usb_device.c	422;"	d	file:
EP12_IN_ODD	usb_device.c	205;"	d	file:
EP12_IN_ODD	usb_device.c	278;"	d	file:
EP12_IN_ODD	usb_device.c	350;"	d	file:
EP12_IN_ODD	usb_device.c	423;"	d	file:
EP12_OUT_EVEN	usb_device.c	202;"	d	file:
EP12_OUT_EVEN	usb_device.c	275;"	d	file:
EP12_OUT_EVEN	usb_device.c	347;"	d	file:
EP12_OUT_EVEN	usb_device.c	420;"	d	file:
EP12_OUT_ODD	usb_device.c	203;"	d	file:
EP12_OUT_ODD	usb_device.c	276;"	d	file:
EP12_OUT_ODD	usb_device.c	348;"	d	file:
EP12_OUT_ODD	usb_device.c	421;"	d	file:
EP13_IN_EVEN	usb_device.c	208;"	d	file:
EP13_IN_EVEN	usb_device.c	281;"	d	file:
EP13_IN_EVEN	usb_device.c	353;"	d	file:
EP13_IN_EVEN	usb_device.c	426;"	d	file:
EP13_IN_ODD	usb_device.c	209;"	d	file:
EP13_IN_ODD	usb_device.c	282;"	d	file:
EP13_IN_ODD	usb_device.c	354;"	d	file:
EP13_IN_ODD	usb_device.c	427;"	d	file:
EP13_OUT_EVEN	usb_device.c	206;"	d	file:
EP13_OUT_EVEN	usb_device.c	279;"	d	file:
EP13_OUT_EVEN	usb_device.c	351;"	d	file:
EP13_OUT_EVEN	usb_device.c	424;"	d	file:
EP13_OUT_ODD	usb_device.c	207;"	d	file:
EP13_OUT_ODD	usb_device.c	280;"	d	file:
EP13_OUT_ODD	usb_device.c	352;"	d	file:
EP13_OUT_ODD	usb_device.c	425;"	d	file:
EP14_IN_EVEN	usb_device.c	212;"	d	file:
EP14_IN_EVEN	usb_device.c	285;"	d	file:
EP14_IN_EVEN	usb_device.c	357;"	d	file:
EP14_IN_EVEN	usb_device.c	430;"	d	file:
EP14_IN_ODD	usb_device.c	213;"	d	file:
EP14_IN_ODD	usb_device.c	286;"	d	file:
EP14_IN_ODD	usb_device.c	358;"	d	file:
EP14_IN_ODD	usb_device.c	431;"	d	file:
EP14_OUT_EVEN	usb_device.c	210;"	d	file:
EP14_OUT_EVEN	usb_device.c	283;"	d	file:
EP14_OUT_EVEN	usb_device.c	355;"	d	file:
EP14_OUT_EVEN	usb_device.c	428;"	d	file:
EP14_OUT_ODD	usb_device.c	211;"	d	file:
EP14_OUT_ODD	usb_device.c	284;"	d	file:
EP14_OUT_ODD	usb_device.c	356;"	d	file:
EP14_OUT_ODD	usb_device.c	429;"	d	file:
EP15_IN_EVEN	usb_device.c	216;"	d	file:
EP15_IN_EVEN	usb_device.c	289;"	d	file:
EP15_IN_EVEN	usb_device.c	361;"	d	file:
EP15_IN_EVEN	usb_device.c	434;"	d	file:
EP15_IN_ODD	usb_device.c	217;"	d	file:
EP15_IN_ODD	usb_device.c	290;"	d	file:
EP15_IN_ODD	usb_device.c	362;"	d	file:
EP15_IN_ODD	usb_device.c	435;"	d	file:
EP15_OUT_EVEN	usb_device.c	214;"	d	file:
EP15_OUT_EVEN	usb_device.c	287;"	d	file:
EP15_OUT_EVEN	usb_device.c	359;"	d	file:
EP15_OUT_EVEN	usb_device.c	432;"	d	file:
EP15_OUT_ODD	usb_device.c	215;"	d	file:
EP15_OUT_ODD	usb_device.c	288;"	d	file:
EP15_OUT_ODD	usb_device.c	360;"	d	file:
EP15_OUT_ODD	usb_device.c	433;"	d	file:
EP1_IN_EVEN	usb_device.c	160;"	d	file:
EP1_IN_EVEN	usb_device.c	233;"	d	file:
EP1_IN_EVEN	usb_device.c	305;"	d	file:
EP1_IN_EVEN	usb_device.c	378;"	d	file:
EP1_IN_ODD	usb_device.c	161;"	d	file:
EP1_IN_ODD	usb_device.c	234;"	d	file:
EP1_IN_ODD	usb_device.c	306;"	d	file:
EP1_IN_ODD	usb_device.c	379;"	d	file:
EP1_OUT_EVEN	usb_device.c	158;"	d	file:
EP1_OUT_EVEN	usb_device.c	231;"	d	file:
EP1_OUT_EVEN	usb_device.c	303;"	d	file:
EP1_OUT_EVEN	usb_device.c	376;"	d	file:
EP1_OUT_ODD	usb_device.c	159;"	d	file:
EP1_OUT_ODD	usb_device.c	232;"	d	file:
EP1_OUT_ODD	usb_device.c	304;"	d	file:
EP1_OUT_ODD	usb_device.c	377;"	d	file:
EP2_IN_EVEN	usb_device.c	164;"	d	file:
EP2_IN_EVEN	usb_device.c	237;"	d	file:
EP2_IN_EVEN	usb_device.c	309;"	d	file:
EP2_IN_EVEN	usb_device.c	382;"	d	file:
EP2_IN_ODD	usb_device.c	165;"	d	file:
EP2_IN_ODD	usb_device.c	238;"	d	file:
EP2_IN_ODD	usb_device.c	310;"	d	file:
EP2_IN_ODD	usb_device.c	383;"	d	file:
EP2_OUT_EVEN	usb_device.c	162;"	d	file:
EP2_OUT_EVEN	usb_device.c	235;"	d	file:
EP2_OUT_EVEN	usb_device.c	307;"	d	file:
EP2_OUT_EVEN	usb_device.c	380;"	d	file:
EP2_OUT_ODD	usb_device.c	163;"	d	file:
EP2_OUT_ODD	usb_device.c	236;"	d	file:
EP2_OUT_ODD	usb_device.c	308;"	d	file:
EP2_OUT_ODD	usb_device.c	381;"	d	file:
EP3_IN_EVEN	usb_device.c	168;"	d	file:
EP3_IN_EVEN	usb_device.c	241;"	d	file:
EP3_IN_EVEN	usb_device.c	313;"	d	file:
EP3_IN_EVEN	usb_device.c	386;"	d	file:
EP3_IN_ODD	usb_device.c	169;"	d	file:
EP3_IN_ODD	usb_device.c	242;"	d	file:
EP3_IN_ODD	usb_device.c	314;"	d	file:
EP3_IN_ODD	usb_device.c	387;"	d	file:
EP3_OUT_EVEN	usb_device.c	166;"	d	file:
EP3_OUT_EVEN	usb_device.c	239;"	d	file:
EP3_OUT_EVEN	usb_device.c	311;"	d	file:
EP3_OUT_EVEN	usb_device.c	384;"	d	file:
EP3_OUT_ODD	usb_device.c	167;"	d	file:
EP3_OUT_ODD	usb_device.c	240;"	d	file:
EP3_OUT_ODD	usb_device.c	312;"	d	file:
EP3_OUT_ODD	usb_device.c	385;"	d	file:
EP4_IN_EVEN	usb_device.c	172;"	d	file:
EP4_IN_EVEN	usb_device.c	245;"	d	file:
EP4_IN_EVEN	usb_device.c	317;"	d	file:
EP4_IN_EVEN	usb_device.c	390;"	d	file:
EP4_IN_ODD	usb_device.c	173;"	d	file:
EP4_IN_ODD	usb_device.c	246;"	d	file:
EP4_IN_ODD	usb_device.c	318;"	d	file:
EP4_IN_ODD	usb_device.c	391;"	d	file:
EP4_OUT_EVEN	usb_device.c	170;"	d	file:
EP4_OUT_EVEN	usb_device.c	243;"	d	file:
EP4_OUT_EVEN	usb_device.c	315;"	d	file:
EP4_OUT_EVEN	usb_device.c	388;"	d	file:
EP4_OUT_ODD	usb_device.c	171;"	d	file:
EP4_OUT_ODD	usb_device.c	244;"	d	file:
EP4_OUT_ODD	usb_device.c	316;"	d	file:
EP4_OUT_ODD	usb_device.c	389;"	d	file:
EP5_IN_EVEN	usb_device.c	176;"	d	file:
EP5_IN_EVEN	usb_device.c	249;"	d	file:
EP5_IN_EVEN	usb_device.c	321;"	d	file:
EP5_IN_EVEN	usb_device.c	394;"	d	file:
EP5_IN_ODD	usb_device.c	177;"	d	file:
EP5_IN_ODD	usb_device.c	250;"	d	file:
EP5_IN_ODD	usb_device.c	322;"	d	file:
EP5_IN_ODD	usb_device.c	395;"	d	file:
EP5_OUT_EVEN	usb_device.c	174;"	d	file:
EP5_OUT_EVEN	usb_device.c	247;"	d	file:
EP5_OUT_EVEN	usb_device.c	319;"	d	file:
EP5_OUT_EVEN	usb_device.c	392;"	d	file:
EP5_OUT_ODD	usb_device.c	175;"	d	file:
EP5_OUT_ODD	usb_device.c	248;"	d	file:
EP5_OUT_ODD	usb_device.c	320;"	d	file:
EP5_OUT_ODD	usb_device.c	393;"	d	file:
EP6_IN_EVEN	usb_device.c	180;"	d	file:
EP6_IN_EVEN	usb_device.c	253;"	d	file:
EP6_IN_EVEN	usb_device.c	325;"	d	file:
EP6_IN_EVEN	usb_device.c	398;"	d	file:
EP6_IN_ODD	usb_device.c	181;"	d	file:
EP6_IN_ODD	usb_device.c	254;"	d	file:
EP6_IN_ODD	usb_device.c	326;"	d	file:
EP6_IN_ODD	usb_device.c	399;"	d	file:
EP6_OUT_EVEN	usb_device.c	178;"	d	file:
EP6_OUT_EVEN	usb_device.c	251;"	d	file:
EP6_OUT_EVEN	usb_device.c	323;"	d	file:
EP6_OUT_EVEN	usb_device.c	396;"	d	file:
EP6_OUT_ODD	usb_device.c	179;"	d	file:
EP6_OUT_ODD	usb_device.c	252;"	d	file:
EP6_OUT_ODD	usb_device.c	324;"	d	file:
EP6_OUT_ODD	usb_device.c	397;"	d	file:
EP7_IN_EVEN	usb_device.c	184;"	d	file:
EP7_IN_EVEN	usb_device.c	257;"	d	file:
EP7_IN_EVEN	usb_device.c	329;"	d	file:
EP7_IN_EVEN	usb_device.c	402;"	d	file:
EP7_IN_ODD	usb_device.c	185;"	d	file:
EP7_IN_ODD	usb_device.c	258;"	d	file:
EP7_IN_ODD	usb_device.c	330;"	d	file:
EP7_IN_ODD	usb_device.c	403;"	d	file:
EP7_OUT_EVEN	usb_device.c	182;"	d	file:
EP7_OUT_EVEN	usb_device.c	255;"	d	file:
EP7_OUT_EVEN	usb_device.c	327;"	d	file:
EP7_OUT_EVEN	usb_device.c	400;"	d	file:
EP7_OUT_ODD	usb_device.c	183;"	d	file:
EP7_OUT_ODD	usb_device.c	256;"	d	file:
EP7_OUT_ODD	usb_device.c	328;"	d	file:
EP7_OUT_ODD	usb_device.c	401;"	d	file:
EP8_IN_EVEN	usb_device.c	188;"	d	file:
EP8_IN_EVEN	usb_device.c	261;"	d	file:
EP8_IN_EVEN	usb_device.c	333;"	d	file:
EP8_IN_EVEN	usb_device.c	406;"	d	file:
EP8_IN_ODD	usb_device.c	189;"	d	file:
EP8_IN_ODD	usb_device.c	262;"	d	file:
EP8_IN_ODD	usb_device.c	334;"	d	file:
EP8_IN_ODD	usb_device.c	407;"	d	file:
EP8_OUT_EVEN	usb_device.c	186;"	d	file:
EP8_OUT_EVEN	usb_device.c	259;"	d	file:
EP8_OUT_EVEN	usb_device.c	331;"	d	file:
EP8_OUT_EVEN	usb_device.c	404;"	d	file:
EP8_OUT_ODD	usb_device.c	187;"	d	file:
EP8_OUT_ODD	usb_device.c	260;"	d	file:
EP8_OUT_ODD	usb_device.c	332;"	d	file:
EP8_OUT_ODD	usb_device.c	405;"	d	file:
EP9_IN_EVEN	usb_device.c	192;"	d	file:
EP9_IN_EVEN	usb_device.c	265;"	d	file:
EP9_IN_EVEN	usb_device.c	337;"	d	file:
EP9_IN_EVEN	usb_device.c	410;"	d	file:
EP9_IN_ODD	usb_device.c	193;"	d	file:
EP9_IN_ODD	usb_device.c	266;"	d	file:
EP9_IN_ODD	usb_device.c	338;"	d	file:
EP9_IN_ODD	usb_device.c	411;"	d	file:
EP9_OUT_EVEN	usb_device.c	190;"	d	file:
EP9_OUT_EVEN	usb_device.c	263;"	d	file:
EP9_OUT_EVEN	usb_device.c	335;"	d	file:
EP9_OUT_EVEN	usb_device.c	408;"	d	file:
EP9_OUT_ODD	usb_device.c	191;"	d	file:
EP9_OUT_ODD	usb_device.c	264;"	d	file:
EP9_OUT_ODD	usb_device.c	336;"	d	file:
EP9_OUT_ODD	usb_device.c	409;"	d	file:
FCY	stream_dispatcher.c	53;"	d	file:
FLASH_ACCESS_PAGE_ERASE	flash_access.c	66;"	d	file:
FLASH_ACCESS_ROW_PROGRAM	flash_access.c	67;"	d	file:
FLASH_ACCESS_WORD_PROGRAM	flash_access.c	68;"	d	file:
FLASH_PAGE_OFFSET	flash_access.c	57;"	d	file:
FLASH_ROW	flash_access.c	60;"	d	file:
FLASH_ROW_SIZE_IN_WORDS	flash_access.c	55;"	d	file:
FLASH_TABLE_PAGE_SIZE_MASK	flash_access.c	73;"	d	file:
FLASH_TABLE_PAGE_SIZE_SHIFT	flash_access.c	74;"	d	file:
FRC_NOMINAL	system_clock.c	48;"	d	file:
I2C_SPEED_1000KHZ	i2c_driver.c	69;"	d	file:
I2C_SPEED_100KHZ	i2c_driver.c	67;"	d	file:
I2C_SPEED_3400KHZ	i2c_driver.c	70;"	d	file:
I2C_SPEED_400KHZ	i2c_driver.c	68;"	d	file:
LPRC_NOMINAL	system_clock.c	49;"	d	file:
NO_OF_NIBBLES	logger.c	52;"	d	file:
NULL_CHARACTER	logger.c	53;"	d	file:
NUMCHAR_TO_INTEGER	logger.c	56;"	d	file:
PLL_OUT_NOMINAL	system_clock.c	50;"	d	file:
POSC_NOMINAL	system_clock.c	53;"	d	file:
ProcessIO	stream_dispatcher.c	/^void ProcessIO(void)$/;"	f
RemoteWakeup	usb_device.c	/^USB_VOLATILE BOOL RemoteWakeup;$/;"	v
SHORT_PKT_NOT_USED	usb_device.c	141;"	d	file:
SHORT_PKT_PENDING	usb_device.c	142;"	d	file:
SHORT_PKT_SENT	usb_device.c	143;"	d	file:
SOSC_NOMINAL	system_clock.c	56;"	d	file:
SPI_FIFO_DEPTH	spi_driver.c	55;"	d	file:
SPI_MAX_FREQ_CONF_TABLE_ENTRIES	spi_driver.c	57;"	d	file:
SetupPkt	usb_device.c	/^volatile CTRL_TRF_SETUP SetupPkt;           \/\/ 8-byte only$/;"	v
StreamDispatcherGetLastError	stream_dispatcher.c	/^u8 StreamDispatcherGetLastError( )$/;"	f
StreamDispatcherInit	stream_dispatcher.c	/^void StreamDispatcherInit ( u32 sysClk )$/;"	f
StreamDispatcherInitAndConnect	stream_dispatcher.c	/^void StreamDispatcherInitAndConnect ( u32 sysClk )$/;"	f
UART_BAUDRATE	debug.c	50;"	d	file:
UART_BRG	debug.c	51;"	d	file:
UART_NIBBLE_TO_HEX	debug.c	117;"	d	file:
UART_SYSCLK	debug.c	49;"	d	file:
UART_TXAUTO	debug.c	55;"	d	file:
UART_TXENABLE	debug.c	54;"	d	file:
UART_TXFULL	debug.c	53;"	d	file:
USBActiveConfiguration	usb_device.c	/^USB_VOLATILE BYTE USBActiveConfiguration;$/;"	v
USBAlternateInterface	usb_device.c	/^USB_VOLATILE BYTE USBAlternateInterface[USB_MAX_NUM_INT];$/;"	v
USBCBCheckOtherReq	usb_hid_stream_driver.c	/^void USBCBCheckOtherReq(void)$/;"	f
USBCBErrorHandler	usb_hid_stream_driver.c	/^void USBCBErrorHandler(void)$/;"	f
USBCBInitEP	usb_hid_stream_driver.c	/^void USBCBInitEP(void)$/;"	f
USBCBSendResume	usb_hid_stream_driver.c	/^void USBCBSendResume(void)$/;"	f
USBCBStdSetDscHandler	usb_hid_stream_driver.c	/^void USBCBStdSetDscHandler(void)$/;"	f
USBCBSuspend	usb_hid_stream_driver.c	/^void USBCBSuspend(void)$/;"	f
USBCBWakeFromSuspend	usb_hid_stream_driver.c	/^void USBCBWakeFromSuspend(void)$/;"	f
USBCB_SOF_Handler	usb_hid_stream_driver.c	/^void USBCB_SOF_Handler(void)$/;"	f
USBCancelIO	usb_device.c	/^void USBCancelIO(BYTE endpoint)$/;"	f
USBCheckHIDRequest	usb_function_hid.c	/^void USBCheckHIDRequest(void)$/;"	f
USBCheckStdRequest	usb_device.c	/^void USBCheckStdRequest(void)$/;"	f
USBConfigureEndpoint	usb_device.c	/^void USBConfigureEndpoint(BYTE EPNum, BYTE direction)$/;"	f
USBCtrlEPService	usb_device.c	/^void USBCtrlEPService(void)$/;"	f
USBCtrlEPServiceComplete	usb_device.c	/^void USBCtrlEPServiceComplete(void)$/;"	f
USBCtrlTrfInHandler	usb_device.c	/^void USBCtrlTrfInHandler(void)$/;"	f
USBCtrlTrfOutHandler	usb_device.c	/^void USBCtrlTrfOutHandler(void)$/;"	f
USBCtrlTrfRxService	usb_device.c	/^void USBCtrlTrfRxService(void)$/;"	f
USBCtrlTrfSetupHandler	usb_device.c	/^void USBCtrlTrfSetupHandler(void)$/;"	f
USBCtrlTrfTxService	usb_device.c	/^void USBCtrlTrfTxService(void)$/;"	f
USBDeviceAttach	usb_device.c	/^void USBDeviceAttach(void)$/;"	f
USBDeviceDetach	usb_device.c	/^void USBDeviceDetach(void)$/;"	f
USBDeviceInit	usb_device.c	/^void USBDeviceInit(void)$/;"	f
USBDeviceState	usb_device.c	/^USB_VOLATILE USB_DEVICE_STATE USBDeviceState;$/;"	v
USBEnableEndpoint	usb_device.c	/^void USBEnableEndpoint(BYTE ep, BYTE options)$/;"	f
USBInData	usb_device.c	/^USB_VOLATILE BYTE *USBInData[USB_MAX_EP_NUMBER];$/;"	v
USBInHandle	usb_hid_stream_driver.c	/^static USB_HANDLE USBInHandle  = 0;$/;"	v	file:
USBInMaxPacketSize	usb_device.c	/^USB_VOLATILE WORD USBInMaxPacketSize[USB_MAX_EP_NUMBER];$/;"	v
USBOutHandle	usb_hid_stream_driver.c	/^static USB_HANDLE USBOutHandle = 0;$/;"	v	file:
USBPrepareForNextSetupTrf	usb_device.c	/^void USBPrepareForNextSetupTrf(void)$/;"	f
USBSleepOnSuspend	usb_hal_pic24.c	/^BOOL USBSleepOnSuspend(void)$/;"	f
USBStallEndpoint	usb_device.c	/^void USBStallEndpoint(BYTE ep, BYTE dir)$/;"	f
USBStallHandler	usb_device.c	/^void USBStallHandler(void)$/;"	f
USBStdFeatureReqHandler	usb_device.c	/^void USBStdFeatureReqHandler(void)$/;"	f
USBStdGetDscHandler	usb_device.c	/^void USBStdGetDscHandler(void)$/;"	f
USBStdGetStatusHandler	usb_device.c	/^void USBStdGetStatusHandler(void)$/;"	f
USBStdSetCfgHandler	usb_device.c	/^void USBStdSetCfgHandler(void)$/;"	f
USBSuspend	usb_device.c	/^void USBSuspend(void)$/;"	f
USBTransferOnePacket	usb_device.c	/^USB_HANDLE USBTransferOnePacket(BYTE ep,BYTE dir,BYTE* data,BYTE len)$/;"	f
USBWakeFromSuspend	usb_device.c	/^void USBWakeFromSuspend(void)$/;"	f
USB_BUS_SENSE	usb_device.c	135;"	d	file:
USB_BUS_SENSE	usb_device.c	136;"	d	file:
USB_DISABLE_NONSTANDARD_EP0_REQUEST_HANDLER	usb_device.c	563;"	d	file:
USB_DISABLE_NONSTANDARD_EP0_REQUEST_HANDLER	usb_device.c	565;"	d	file:
USB_ERROR_HANDLER	usb_device.c	557;"	d	file:
USB_ERROR_HANDLER	usb_device.c	559;"	d	file:
USB_FUNCTION_HID_C	usb_function_hid.c	90;"	d	file:
USB_HAL_PIC24F_C	usb_hal_pic24.c	100;"	d	file:
USB_NEXT_EP0_IN_PING_PONG	usb_device.c	152;"	d	file:
USB_NEXT_EP0_IN_PING_PONG	usb_device.c	225;"	d	file:
USB_NEXT_EP0_IN_PING_PONG	usb_device.c	297;"	d	file:
USB_NEXT_EP0_IN_PING_PONG	usb_device.c	370;"	d	file:
USB_NEXT_EP0_OUT_PING_PONG	usb_device.c	151;"	d	file:
USB_NEXT_EP0_OUT_PING_PONG	usb_device.c	224;"	d	file:
USB_NEXT_EP0_OUT_PING_PONG	usb_device.c	296;"	d	file:
USB_NEXT_EP0_OUT_PING_PONG	usb_device.c	369;"	d	file:
USB_NEXT_PING_PONG	usb_device.c	153;"	d	file:
USB_NEXT_PING_PONG	usb_device.c	226;"	d	file:
USB_NEXT_PING_PONG	usb_device.c	298;"	d	file:
USB_NEXT_PING_PONG	usb_device.c	371;"	d	file:
USB_SET_CONFIGURATION_HANDLER	usb_device.c	575;"	d	file:
USB_SET_CONFIGURATION_HANDLER	usb_device.c	577;"	d	file:
USB_SET_DESCRIPTOR_HANDLER	usb_device.c	569;"	d	file:
USB_SET_DESCRIPTOR_HANDLER	usb_device.c	571;"	d	file:
USB_SOF_HANDLER	usb_device.c	551;"	d	file:
USB_SOF_HANDLER	usb_device.c	553;"	d	file:
USB_SUSPEND_HANDLER	usb_device.c	535;"	d	file:
USB_SUSPEND_HANDLER	usb_device.c	539;"	d	file:
USB_TRASFER_COMPLETE_HANDLER	usb_device.c	581;"	d	file:
USB_TRASFER_COMPLETE_HANDLER	usb_device.c	583;"	d	file:
USB_WAKEUP_FROM_SUSPEND_HANDLER	usb_device.c	543;"	d	file:
USB_WAKEUP_FROM_SUSPEND_HANDLER	usb_device.c	547;"	d	file:
USER_USB_CALLBACK_EVENT_HANDLER	usb_hid_stream_driver.c	/^BOOL USER_USB_CALLBACK_EVENT_HANDLER(USB_EVENT event, void *pdata, WORD size)$/;"	f
USE_AND_OR	debug.c	40;"	d	file:
USE_AND_OR	i2c_driver.c	49;"	d	file:
USE_AND_OR	spi_driver.c	40;"	d	file:
USE_AND_OR	timer_driver.c	43;"	d	file:
USTATcopy	usb_device.c	/^USB_VOLATILE BYTE USTATcopy;$/;"	v
WAIT_SETUP	usb_device.c	146;"	d	file:
_USB1Interrupt	usb_device.c	/^void __attribute__((interrupt,auto_psv)) _USB1Interrupt()$/;"	f
actFrequency	spi_driver.c	/^    u32 actFrequency;$/;"	m	struct:__anon1	file:
active_protocol	usb_function_hid.c	/^BYTE active_protocol;   \/\/ [0] Boot Protocol [1] Report Protocol$/;"	v
amsUsbInitialise	ams_usb.c	/^void amsUsbInitialise ( )$/;"	f
amsUsbIsCableConnected	ams_usb.c	/^s8 amsUsbIsCableConnected ( )$/;"	f
amsUsbIsNotReady	ams_usb.c	/^void amsUsbIsNotReady ( )$/;"	f
amsUsbIsReady	ams_usb.c	/^s8 amsUsbIsReady ( )$/;"	f
appId	bootloadable.c	/^const unsigned short appId __attribute__ ((space(psv),address(APP_ID_ADDR))) = APP_ID;$/;"	v
applFirmwareInformation	weak_stream_functions.c	/^const char * WEAK applFirmwareInformation ( )$/;"	f
applPeripheralReset	weak_stream_functions.c	/^u8 WEAK applPeripheralReset ( )$/;"	f
applProcessCmd	weak_stream_functions.c	/^u8 WEAK applProcessCmd ( u8 protocol, u16 rxSize, const u8 * rxData, u16 * txSize, u8 * txData )$/;"	f
applProcessCyclic	weak_stream_functions.c	/^u8 WEAK applProcessCyclic ( u8 * protocol, u16 * txSize, u8 * txData, u16 remainingSize )$/;"	f
applReadReg	weak_stream_functions.c	/^u8 WEAK applReadReg ( u16 rxSize, const u8 * rxData, u16 * txSize, u8 * txData )$/;"	f
applWriteReg	weak_stream_functions.c	/^u8 WEAK applWriteReg ( u16 rxSize, const u8 * rxData, u16 * txSize, u8 * txData )$/;"	f
buf	spi_driver.c	/^    volatile unsigned int  *buf ;$/;"	m	struct:spiHw	file:
clkCyclesPerUSec	timer_driver.c	/^static u32 clkCyclesPerUSec[MAX_NR_OF_TIMERS];$/;"	v	file:
con1	spi_driver.c	/^    volatile unsigned int  *con1;$/;"	m	struct:spiHw	file:
con2	spi_driver.c	/^    volatile unsigned int  *con2;$/;"	m	struct:spiHw	file:
controlTransferState	usb_device.c	/^USB_VOLATILE BYTE controlTransferState;$/;"	v
counter	weak_stream_functions.c	/^static u32 counter = 0;$/;"	v	file:
dbgHexDump	logger.c	/^void dbgHexDump(const unsigned char *buffer, u16 length)$/;"	f
dbgLog	logger.c	/^s8 dbgLog(const char* format, ...)$/;"	f
debugByte	debug.c	/^void debugByte( u8 dat )$/;"	f
debugByteAsNumber	debug.c	/^void debugByteAsNumber( u8 number )$/;"	f
debugDeinitialize	debug.c	/^void debugDeinitialize()$/;"	f
debugInitialize	debug.c	/^void debugInitialize( )$/;"	f
debugNumber	debug.c	/^void debugNumber( u16 number )$/;"	f
debugString	debug.c	/^void debugString( const char * text )$/;"	f
debugWithTime	debug.c	/^void debugWithTime( const char * text )$/;"	f
enableBootloader	bootloadable.c	/^void __attribute__((space(prog),address(ENABLE_BOOTLOADER_ADDR))) enableBootloader()$/;"	f
flashErasePage	flash_access.c	/^void flashErasePage ( u32 wordAddress )$/;"	f
flashProgram1Instruction	flash_access.c	/^void flashProgram1Instruction ( u32 * wordAddress, u32 instruction )$/;"	f
flashProgram3Bytes	flash_access.c	/^void flashProgram3Bytes ( u32 * wordAddress, const u8 * data )$/;"	f
flashProgramInstructionRow	flash_access.c	/^void flashProgramInstructionRow ( u32 * wordAddress, const u32 * instructions )$/;"	f
flashRead1Instruction	flash_access.c	/^u32 flashRead1Instruction ( u32 * wordAddress )$/;"	f
flashRead3Bytes	flash_access.c	/^void flashRead3Bytes ( u32 * wordAddress, u8 * data )$/;"	f
frequency	spi_driver.c	/^    u32 frequency;$/;"	m	struct:__anon1	file:
gLcdDriverAccess	lcd.c	/^static lcd_access_functions_t gLcdDriverAccess;$/;"	v	file:
gLcdPages	lcd.c	/^u16 gLcdPages;$/;"	v
gLcdPixelsHeight	lcd.c	/^u16 gLcdPixelsHeight;$/;"	v
gLcdPixelsWidth	lcd.c	/^u16 gLcdPixelsWidth;$/;"	v
gSpiInstance	lcd_NHD_A1Z.c	/^static u8 gSpiInstance;$/;"	v	file:
getI2cBrgValue	i2c_driver.c	/^static u8 getI2cBrgValue (u8 clockMode)$/;"	f	file:
getI2cBrgValueFromCustomSpeed	i2c_driver.c	/^static u16 getI2cBrgValueFromCustomSpeed (u32 customClockSpeed)$/;"	f	file:
handleEnterBootloader	stream_dispatcher.c	/^static u8 handleEnterBootloader ( )$/;"	f	file:
handleFirmwareInformation	stream_dispatcher.c	/^static u8 handleFirmwareInformation ( u16 * toTx, u8 * txData )$/;"	f	file:
handleFirmwareNumber	stream_dispatcher.c	/^static u8 handleFirmwareNumber ( u16 * toTx, u8 * txData )$/;"	f	file:
handleI2c	stream_dispatcher.c	/^static u8 handleI2c ( u16 rxed, u8 * rxData, u16 * toTx, u8 * txData )$/;"	f	file:
handleI2cConfig	stream_dispatcher.c	/^static u8 handleI2cConfig ( u16 rxed, u8 * rxData )$/;"	f	file:
handleReset	stream_dispatcher.c	/^static u8 handleReset ( u16 rxed, u8 * rxData )$/;"	f	file:
handleSpi	stream_dispatcher.c	/^static u8 handleSpi ( u16 rxed, u8 * rxData, u16 * toTx, u8 * txData )$/;"	f	file:
handleSpiConfig	stream_dispatcher.c	/^static u8 handleSpiConfig ( u16 rxed, u8 * rxData )$/;"	f	file:
hid_report_in	usb_device.c	/^volatile unsigned char hid_report_in[HID_INT_IN_EP_SIZE];$/;"	v
hid_report_out	usb_device.c	/^volatile unsigned char hid_report_out[HID_INT_OUT_EP_SIZE];$/;"	v
i2cDeserialiseConfig	i2c_driver.c	/^void i2cDeserialiseConfig( i2cConfig_t * config, const u8 * data )$/;"	f
i2cDeserialiseConfig	weak_stream_functions.c	/^void WEAK i2cDeserialiseConfig ( i2cConfig_t * config, const u8 * data )$/;"	f
i2cIdle	i2c_driver.c	/^static void i2cIdle (void)$/;"	f	file:
i2cInitialize	i2c_driver.c	/^s8 i2cInitialize (u32 sysClk, const i2cConfig_t* const cfgDataIn, i2cConfig_t *cfgDataOut)$/;"	f
i2cInitialize	weak_stream_functions.c	/^s8 WEAK i2cInitialize ( u32 sysClk, const i2cConfig_t* cfgDataIn, i2cConfig_t *cfgDataOut )$/;"	f
i2cReadNBytes	i2c_driver.c	/^static u16 i2cReadNBytes (u16 nRead, u8 *read)$/;"	f	file:
i2cRestart	i2c_driver.c	/^static void i2cRestart (void)$/;"	f	file:
i2cRx	i2c_driver.c	/^u16 i2cRx (u8 slaveAddr, const u8 * txData, u16 numberOfBytesToTx, u8 * rxData, u16 numberOfBytesToRx)$/;"	f
i2cRxTx	i2c_driver.c	/^s8 i2cRxTx ( u16 numberOfBytesToTx, const u8 * txData, u16 numberOfBytesToRx, u8 * rxData, BOOL sendStartCond, BOOL sendStopCond )$/;"	f
i2cRxTx	weak_stream_functions.c	/^s8 WEAK i2cRxTx ( u16 numberOfBytesToTx, const u8 * txData, u16 numberOfBytesToRx, u8 * rxData, BOOL sendStartCond, BOOL sendStopCond )$/;"	f
i2cSerialiseConfig	i2c_driver.c	/^void i2cSerialiseConfig( const i2cConfig_t * config, u8 * data )$/;"	f
i2cStart	i2c_driver.c	/^static void i2cStart (void)$/;"	f	file:
i2cStop	i2c_driver.c	/^static void i2cStop (void)$/;"	f	file:
i2cTx	i2c_driver.c	/^u16 i2cTx (u8 slaveAddr, const u8 * data, u16 numberOfBytesToTx)$/;"	f
i2cTxAllButStopCondition	i2c_driver.c	/^static u16 i2cTxAllButStopCondition (u8 slaveAddr, const u8 * txData, u16 numberOfBytesToTx)$/;"	f	file:
i2cWriteByte	i2c_driver.c	/^static u8 i2cWriteByte (u8 data)$/;"	f	file:
idle_rate	usb_function_hid.c	/^BYTE idle_rate;$/;"	v
inPipes	usb_device.c	/^USB_VOLATILE IN_PIPE inPipes[1];$/;"	v
ioLedOff	weak_stream_functions.c	/^void WEAK ioLedOff ( )$/;"	f
ioLedOn	weak_stream_functions.c	/^void WEAK ioLedOn ( )$/;"	f
lastError	stream_dispatcher.c	/^static u8 lastError; \/* flag inicating different types of errors that cannot be reported in the protocol status field *\/$/;"	v	file:
lcd_Clear	lcd.c	/^void lcd_Clear()$/;"	f
lcd_Init	lcd.c	/^void lcd_Init(lcd_access_functions_t lcdDriverAccess)$/;"	f
lcd_NHD_A1Z_CharPos	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_CharPos(u8 x, u8 y)$/;"	f
lcd_NHD_A1Z_Clear	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_Clear(void)$/;"	f
lcd_NHD_A1Z_GetAccessFunctions	lcd_NHD_A1Z.c	/^lcd_access_functions_t lcd_NHD_A1Z_GetAccessFunctions(void)$/;"	f
lcd_NHD_A1Z_GetResolution	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_GetResolution(u16 *pixelsWidth, u16 *pixelsHeight)$/;"	f
lcd_NHD_A1Z_HardReset	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_HardReset()$/;"	f
lcd_NHD_A1Z_Init	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_Init(u8 spiInstance)$/;"	f
lcd_NHD_A1Z_InitializeSPI	lcd_NHD_A1Z.c	/^s8 lcd_NHD_A1Z_InitializeSPI()$/;"	f
lcd_NHD_A1Z_InvertDisable	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_InvertDisable()$/;"	f
lcd_NHD_A1Z_InvertEnable	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_InvertEnable()$/;"	f
lcd_NHD_A1Z_Off	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_Off(void)$/;"	f
lcd_NHD_A1Z_On	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_On(void)$/;"	f
lcd_NHD_A1Z_SetAllPixels	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_SetAllPixels(bool_t pixels_on)$/;"	f
lcd_NHD_A1Z_SetColumnAddress	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_SetColumnAddress(u8 column)$/;"	f
lcd_NHD_A1Z_SetPageAddress	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_SetPageAddress(u8 page)$/;"	f
lcd_NHD_A1Z_SetStartLineAddress	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_SetStartLineAddress(u8 line)    \/\/ Starts the already written RAM from a specific line$/;"	f
lcd_NHD_A1Z_SleepDisable	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_SleepDisable()$/;"	f
lcd_NHD_A1Z_SleepEnable	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_SleepEnable()$/;"	f
lcd_NHD_A1Z_SoftReset	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_SoftReset()$/;"	f
lcd_NHD_A1Z_TestCharTable	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_TestCharTable (void)$/;"	f
lcd_NHD_A1Z_WriteChar	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_WriteChar(u8 value)$/;"	f
lcd_NHD_A1Z_WriteCharInverted	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_WriteCharInverted(u8 value)$/;"	f
lcd_NHD_A1Z_WriteCommand	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_WriteCommand(u8 command)$/;"	f
lcd_NHD_A1Z_WriteData	lcd_NHD_A1Z.c	/^void lcd_NHD_A1Z_WriteData(u8 value)$/;"	f
lcd_WriteBitMap	lcd.c	/^void lcd_WriteBitMap (u8 const *bitmap)$/;"	f
lcd_WriteNumRightAligned	lcd.c	/^void lcd_WriteNumRightAligned(u8 fontCol, u8 fontRow, s32 value, u8 nbdigit, u8 precision)$/;"	f
lcd_WriteStr	lcd.c	/^void lcd_WriteStr(u8 fontCol, u8 fontRow, char* string)$/;"	f
lcd_WriteStrInverted	lcd.c	/^void lcd_WriteStrInverted(u8 fontCol, u8 fontRow, char* string)$/;"	f
lcd_font_5x7_ASCII_Ext_Chars	lcd_font_5x7_ASCII.c	/^u8 const lcd_font_5x7_ASCII_Ext_Chars[] = {$/;"	v
lcd_font_5x7_ASCII_Std_Chars	lcd_font_5x7_ASCII.c	/^u8 const lcd_font_5x7_ASCII_Std_Chars[] = {$/;"	v
msd_buffer	usb_device.c	/^volatile char msd_buffer[512];$/;"	v
msd_cbw	usb_device.c	/^volatile USB_MSD_CBW msd_cbw;$/;"	v
msd_csw	usb_device.c	/^volatile USB_MSD_CSW msd_csw;$/;"	v
myCfgData	i2c_driver.c	/^static i2cConfig_t myCfgData;$/;"	v	file:
myCfgData	spi_driver.c	/^static spiConfig_t myCfgData;$/;"	v	file:
mySystemClock	i2c_driver.c	/^static u32 mySystemClock;$/;"	v	file:
oldRequestFormat	uart_stream_driver.c	/^static u8 oldRequestFormat; \/* check if host is using stream v1 version *\/$/;"	v	file:
outPipes	usb_device.c	/^USB_VOLATILE OUT_PIPE outPipes[1];$/;"	v
pBDTEntryEP0OutCurrent	usb_device.c	/^volatile BDT_ENTRY *pBDTEntryEP0OutCurrent;$/;"	v
pBDTEntryEP0OutNext	usb_device.c	/^volatile BDT_ENTRY *pBDTEntryEP0OutNext;$/;"	v
pBDTEntryIn	usb_device.c	/^volatile BDT_ENTRY *pBDTEntryIn[USB_MAX_EP_NUMBER+1];$/;"	v
pBDTEntryOut	usb_device.c	/^volatile BDT_ENTRY *pBDTEntryOut[USB_MAX_EP_NUMBER+1];$/;"	v
pCbFuncArray	timer_driver.c	/^static pCbFunc pCbFuncArray[MAX_NR_OF_TIMERS] = {NULL};$/;"	v	file:
pDst	usb_device.c	/^USB_VOLATILE BYTE *pDst;$/;"	v
priPreScalerReg	spi_driver.c	/^    u8 priPreScalerReg;$/;"	m	struct:__anon1	file:
processCyclic	stream_dispatcher.c	/^static u16 processCyclic ( )$/;"	f	file:
processReceivedPackets	stream_dispatcher.c	/^static u16 processReceivedPackets ( )$/;"	f	file:
rxBuffer	stream_dispatcher.c	/^static u8 rxBuffer[ AMS_STREAM_BUFFER_SIZE ]; \/*! buffer to store protocol packets received from the Host *\/$/;"	v	file:
rxBuffer	uart_driver.c	/^static u8 rxBuffer[UART_RX_BUFFER_SIZE];$/;"	v	file:
rxBuffer	uart_stream_driver.c	/^static u8 * rxBuffer;   \/* hook to rx buffer provided by uartStreamInitialize *\/$/;"	v	file:
rxBuffer	usb_hid_stream_driver.c	/^static u8 * rxBuffer;   \/\/buffer location is set in StreamInitialize$/;"	v	file:
rxCount	uart_driver.c	/^static u16 rxCount;$/;"	v	file:
rxEnd	uart_stream_driver.c	/^static u8 * rxEnd; \/* pointer to next position where to copy the received data *\/$/;"	v	file:
rxEnd	usb_hid_stream_driver.c	/^static u8 * rxEnd; \/* pointer to next position where to copy the received data *\/$/;"	v	file:
rxError	uart_driver.c	/^static u8 rxError;$/;"	v	file:
rxPayloadSize	uart_stream_driver.c	/^static u16 rxPayloadSize; \/* the payload size read out from the rx- uart header *\/$/;"	v	file:
rxSize	uart_stream_driver.c	/^static u16 rxSize;          \/* so far received payload bytes *\/$/;"	v	file:
rxSize	usb_hid_stream_driver.c	/^static u16 rxSize;$/;"	v	file:
rxTid	uart_stream_driver.c	/^static u8 rxTid;   \/* tid received *\/$/;"	v	file:
rxTid	usb_hid_stream_driver.c	/^static u8 rxTid;$/;"	v	file:
rxUartHeaderBuffer	uart_stream_driver.c	/^static u8 rxUartHeaderBuffer[ UART_HEADER_SIZE ]; \/* small buffer to hold the rxed uart header *\/$/;"	v	file:
rxUartHeaderSize	uart_stream_driver.c	/^static u8 rxUartHeaderSize;    \/* number of so far received bytes of the uart header *\/$/;"	v	file:
secPreScaler	spi_driver.c	/^    u16 secPreScaler;$/;"	m	struct:__anon1	file:
shortPacketStatus	usb_device.c	/^USB_VOLATILE BYTE shortPacketStatus;$/;"	v
spiActivateSEN	spi_driver.c	/^void spiActivateSEN()$/;"	f
spiController	spi_driver.c	/^static const struct spiHw spiController[2] =$/;"	v	typeref:struct:spiHw	file:
spiDeactivateSEN	spi_driver.c	/^void spiDeactivateSEN()$/;"	f
spiDeinitialize	spi_driver.c	/^s8 spiDeinitialize()$/;"	f
spiDeserialiseConfig	spi_driver.c	/^void spiDeserialiseConfig( spiConfig_t * config, const u8 * data )$/;"	f
spiDeserialiseConfig	weak_stream_functions.c	/^void WEAK spiDeserialiseConfig ( spiConfig_t * config, const u8 * data )$/;"	f
spiFreqConfTable	spi_driver.c	/^static spiFrequencyConfiguration_t spiFreqConfTable[SPI_MAX_FREQ_CONF_TABLE_ENTRIES];$/;"	v	file:
spiFrequencyConfiguration_t	spi_driver.c	/^} spiFrequencyConfiguration_t;$/;"	t	typeref:struct:__anon1	file:
spiHw	spi_driver.c	/^struct spiHw$/;"	s	file:
spiInitialize	spi_driver.c	/^s8 spiInitialize(u32 sysClk, const spiConfig_t* const spiConfigIn, spiConfig_t *spiConfigOut)$/;"	f
spiInitialize	weak_stream_functions.c	/^s8 WEAK spiInitialize ( u32 sysClk, const spiConfig_t* spiConfigIn, spiConfig_t* spiConfigOut )$/;"	f
spiReadBuf	spi_driver.c	62;"	d	file:
spiReadCon1	spi_driver.c	60;"	d	file:
spiReadCon2	spi_driver.c	61;"	d	file:
spiReadStat	spi_driver.c	59;"	d	file:
spiSerialiseConfig	spi_driver.c	/^void spiSerialiseConfig( const spiConfig_t * config, u8 * data )$/;"	f
spiTableIndex	spi_driver.c	/^static umword spiTableIndex = 0;$/;"	v	file:
spiTxRx	spi_driver.c	/^s8 spiTxRx(const u8* txData, u8* rxData, u16 length)$/;"	f
spiTxRx	weak_stream_functions.c	/^s8 WEAK spiTxRx ( const u8 * txData, u8 * rxData, u16 numberOfBytes )$/;"	f
spiWriteBuf	spi_driver.c	67;"	d	file:
spiWriteCon1	spi_driver.c	65;"	d	file:
spiWriteCon2	spi_driver.c	66;"	d	file:
spiWriteStat	spi_driver.c	64;"	d	file:
stat	spi_driver.c	/^    volatile unsigned int  *stat;$/;"	m	struct:spiHw	file:
systemClock	stream_dispatcher.c	/^static u32 systemClock;$/;"	v	file:
systemClockChangeClockSource	system_clock.c	/^u32 systemClockChangeClockSource ( u16 source, u32 newFcy )$/;"	f
systemClockConfigure	system_clock.c	/^void systemClockConfigure( s8 poscEnableDuringSleep, s8 soscEnable )$/;"	f
systemClockFindFrcPostscaler	system_clock.c	/^static void systemClockFindFrcPostscaler ( u32 frequency )$/;"	f	file:
systemClockFindPllPrescaler	system_clock.c	/^static void systemClockFindPllPrescaler ( u32 frequency )$/;"	f	file:
systemClockFromFrcPostscaler	system_clock.c	/^static u32 systemClockFromFrcPostscaler ( )$/;"	f	file:
systemClockFromPllPrescaler	system_clock.c	/^static u32 systemClockFromPllPrescaler ( )$/;"	f	file:
systemClockGetClockSource	system_clock.c	/^u8 systemClockGetClockSource ( )$/;"	f
systemClockGetFcy	system_clock.c	/^u32 systemClockGetFcy ( )$/;"	f
systemClockInitialise	system_clock.c	/^u32 systemClockInitialise ( )$/;"	f
systemFrequency	spi_driver.c	/^    u32 systemFrequency;$/;"	m	struct:__anon1	file:
systemTickOverflows	debug.c	/^static u32 systemTickOverflows;$/;"	v	file:
systemTicks	debug.c	/^u32 systemTicks( )$/;"	f
systemTicksInitialize	debug.c	/^void systemTicksInitialize( )$/;"	f
theSystemClock	system_clock.c	/^u32 theSystemClock = 0;$/;"	v
timer1Isr	timer_driver.c	/^void __attribute__((interrupt, no_auto_psv)) timer1Isr ( void )$/;"	f
timer2Isr	timer_driver.c	/^void __attribute__((interrupt, no_auto_psv)) timer2Isr ( void )$/;"	f
timer3Isr	timer_driver.c	/^void __attribute__((interrupt, no_auto_psv)) timer3Isr ( void )$/;"	f
timer4Isr	timer_driver.c	/^void __attribute__((interrupt, no_auto_psv)) timer4Isr ( void )$/;"	f
timer5Isr	timer_driver.c	/^void __attribute__((interrupt, no_auto_psv)) timer5Isr ( void )$/;"	f
timerInitialize	timer_driver.c	/^void timerInitialize(u8 timerModule, u32 systemFrequency )$/;"	f
timerIsRunning	timer_driver.c	/^BOOL timerIsRunning( u8 timerModule )$/;"	f
timerIsr	timer_driver.c	/^static void timerIsr( u8 timerModule )$/;"	f	file:
timerMaxValueUSec	timer_driver.c	/^static u32 timerMaxValueUSec;$/;"	v	file:
timerRunning	timer_driver.c	/^static volatile s8 timerRunning[MAX_NR_OF_TIMERS];$/;"	v	file:
timerSetTimeBasisAndStart	timer_driver.c	/^void timerSetTimeBasisAndStart(u32 fcy, u8 timerModule, u32 uSec, void(*cbFunc)() )$/;"	f
timerStart	timer_driver.c	/^void timerStart(u8 timerModule, u32 uSec, void(*cbFunc)() )$/;"	f
timerStop	timer_driver.c	/^void timerStop( u8 timerModule )$/;"	f
timerStopSequence	timer_driver.c	/^static void timerStopSequence( u8 timerModule )$/;"	f	file:
timerStopWithCb	timer_driver.c	/^void timerStopWithCb( u8 timerModule )$/;"	f
timerValue	timer_driver.c	/^static volatile u32 timerValue[MAX_NR_OF_TIMERS];$/;"	v	file:
txBuffer	stream_dispatcher.c	/^static u8 txBuffer[ AMS_STREAM_BUFFER_SIZE ]; \/*! buffer to store protocol packets which are transmitted to the Host *\/$/;"	v	file:
txBuffer	uart_stream_driver.c	/^static u8 * txBuffer;   \/* hook to tx buffer provided by uartStreamInitialize *\/$/;"	v	file:
txBuffer	usb_hid_stream_driver.c	/^static u8 * txBuffer;   \/\/buffer location is set in StreamInitialize$/;"	v	file:
txTid	uart_stream_driver.c	/^static u8 txTid;   \/* tid for transmit *\/$/;"	v	file:
txTid	usb_hid_stream_driver.c	/^static u8 txTid;$/;"	v	file:
txUartHeaderBuffer	uart_stream_driver.c	/^static u8 txUartHeaderBuffer[ UART_HEADER_SIZE ]; \/* small buffer to hold the transmit uart header *\/$/;"	v	file:
uart1RxIsr	uart_driver.c	/^void INTERRUPT uart1RxIsr (void)$/;"	f
uart1RxIsr	uart_driver.c	55;"	d	file:
uartDeinitialize	uart_driver.c	/^s8 uartDeinitialize ()$/;"	f
uartInitialize	uart_driver.c	/^s8 uartInitialize (u32 sysclk, u32 baudrate, u32* actbaudrate)$/;"	f
uartRxInitialize	uart_driver.c	/^s8 uartRxInitialize ()$/;"	f
uartRxNBytes	uart_driver.c	/^s8 uartRxNBytes ( u8 * buffer, u16 * numBytes )$/;"	f
uartRxNumBytesAvailable	uart_driver.c	/^u16 uartRxNumBytesAvailable ()$/;"	f
uartStreamConnect	uart_stream_driver.c	/^void uartStreamConnect (void)$/;"	f
uartStreamDisconnect	uart_stream_driver.c	/^void uartStreamDisconnect (void)$/;"	f
uartStreamHasAnotherPacket	uart_stream_driver.c	/^s8 uartStreamHasAnotherPacket ( )$/;"	f
uartStreamInitialize	uart_stream_driver.c	/^void uartStreamInitialize ( u8 * rxBuf, u8 * txBuf )$/;"	f
uartStreamOldFormatRequest	uart_stream_driver.c	/^u16 uartStreamOldFormatRequest ( )$/;"	f
uartStreamPacketProcessed	uart_stream_driver.c	/^void uartStreamPacketProcessed ( u8 rxed )$/;"	f
uartStreamReady	uart_stream_driver.c	/^u8 uartStreamReady (void)$/;"	f
uartStreamReceive	uart_stream_driver.c	/^u16 uartStreamReceive ( )$/;"	f
uartStreamTransmit	uart_stream_driver.c	/^void uartStreamTransmit ( u16 totalTxSize )$/;"	f
uartTxByte	uart_driver.c	/^s8 uartTxByte ( u8 dat )$/;"	f
uartTxDeinitialize	uart_driver.c	/^s8 uartTxDeinitialize ()$/;"	f
uartTxInitialize	uart_driver.c	/^s8 uartTxInitialize (u32 sysclk, u32 baudrate, u32* actbaudrate)$/;"	f
uartTxNBytes	uart_driver.c	/^s8 uartTxNBytes ( const u8 * buffer, u16 length )$/;"	f
uartTxString	uart_driver.c	/^s8 uartTxString ( const char * text )$/;"	f
usbRxBuffer	usb_hid_stream_driver.c	/^static u8 usbRxBuffer[USB_HID_REPORT_SIZE];     \/\/buffer for usb stack$/;"	v	file:
usbStreamConnect	usb_hid_stream_driver.c	/^void usbStreamConnect (void)$/;"	f
usbStreamDisconnect	usb_hid_stream_driver.c	/^void usbStreamDisconnect (void)$/;"	f
usbStreamHasAnotherPacket	usb_hid_stream_driver.c	/^s8 usbStreamHasAnotherPacket ( )$/;"	f
usbStreamInitialize	usb_hid_stream_driver.c	/^void usbStreamInitialize (u8 * rxBuf, u8 * txBuf)$/;"	f
usbStreamOldFormatRequest	usb_hid_stream_driver.c	/^u16 usbStreamOldFormatRequest ( )$/;"	f
usbStreamPacketProcessed	usb_hid_stream_driver.c	/^void usbStreamPacketProcessed ( u16 rxed )$/;"	f
usbStreamReady	usb_hid_stream_driver.c	/^u8 usbStreamReady (void)$/;"	f
usbStreamReceive	usb_hid_stream_driver.c	/^u16 usbStreamReceive ( )$/;"	f
usbStreamTransmit	usb_hid_stream_driver.c	/^void usbStreamTransmit ( u16 totalTxSize )$/;"	f
usbTxBuffer	usb_hid_stream_driver.c	/^static u8 usbTxBuffer[USB_HID_REPORT_SIZE];     \/\/buffer for usb stack$/;"	v	file:
userReset	bootloadable.c	/^const unsigned short userReset __attribute__ ((space(psv),address(USER_PROG_RESET_ADDR))) = (unsigned short)_reset;$/;"	v
